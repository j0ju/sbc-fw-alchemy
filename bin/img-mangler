#!/bin/sh
# (C) 2023-2025 Joerg Jungermann, GPLv2 see LICENSE
set -e

PREFIX="${0%/bin/${0##*/}}"
DEP_DIR="$PREFIX/.deps"
BUILT_FLAG="$DEP_DIR/img-mangler.built"
IMAGE_REPO=sbc
IMAGE_TAG=img-mangler
WORKDIR=/src
MODE=exec

OPTS=
OPTS="$OPTS --rm"

if [ "$#" = 0 ]; then
  OPTS="$OPTS -it"
fi

while [ -n "$1" ]; do # eval until the first unknown argument
  case "$1" in
    -it | -ti | -i | -t )
      OPTS="$OPTS $1"
      shift
      ;;
    -p | --privileged )
      OPTS="$OPTS --privileged"
      shift
      ;;
    --pid-host | -ph )
      shift
      OPTS="$OPTS --pid host"
      ;;
    --image )
      IMAGE_TAG="$2"
      case "$IMAGE_TAG" in
        *:* )
          IMAGE_REPO="${IMAGE_TAG%:*}"
          IMAGE_TAG="${IMAGE_TAG#*:}"
          ;;
      esac
      shift
      shift
      ;;
    -u | -v | -e | --name )
      OPTS="$OPTS $1 '$2'"
      shift
      shift
      ;;
    -w )
      WORKDIR="$2"
      shift
      shift
      ;;
    list | ls | l )
      MODE=list
      break
      ;;
    * )
      break
      ;;
  esac
done

case "$MODE" in
  exec )
    [ -f "$BUILT_FLAG" ] || \
      make img-mangler
    eval "exec docker run --rm -v $PWD:/src -w '$WORKDIR' --log-driver none -e 'OWNER=$(id -u)' -e 'GROUP=$(id -g)' $OPTS '$IMAGE_REPO:$IMAGE_TAG' \"\$@\""
    ;;
  list )
    header=0
    fmt='%35s %15s %15s\n'
    docker image ls | sort | while read pfx tag hash time time_unit ago docker_size; do
      [ "$pfx" = "$IMAGE_REPO" ] || continue
      if [ "$header" = 0 ]; then
        printf "$fmt" "IMAGE" "FS SIZE" "DOCKER USAGE"
        header=1
      fi
      img_size="$( docker run --rm --network=none $pfx:$tag sh -ec "if [ -x /target/lib/cleanup-rootfs.sh ]; then chroot /target sh /lib/cleanup-rootfs.sh; du -sh /target; else du -shx /; fi" | ( read size _; echo $size) )"
      printf "$fmt" "$tag" "$img_size" "$docker_size"
    done
    ;;
esac
