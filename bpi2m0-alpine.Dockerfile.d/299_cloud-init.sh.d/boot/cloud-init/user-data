#cloud-config
---
disable_root: true
fqdn: bpi0m2.local
hostname: bpi0m2
manage_etc_hosts: true
package_update: false
ssh_pwauth: true

users: []

# this is overridden bei runcmd section in user-data
runcmd:
  - |
    PS4="runcmd: "; set -e; trap `exit $?` EXIT
    set -ex

    # this ensures that cloud init is only running once
    echo "disabled by /boot/cloud-init/user-data" > /etc/cloud/cloud-init.disabled
    rc-update | while read svc _ runlevels; do
      case "$svc" in
        cloud-* )
          for lvl in $runlevels; do
            rc-update del $svc $lvl
          done
          ;;
      esac
    done

    #- fix permission of  ~pi
    echo pi:banana | chpasswd
    chown -R pi: ~pi

    #- disable OTG getty for now
    rc-update del getty.ttyGS0

    #- podman - move storage dir away from overlay and enable cgroups
    rc-update add cgroups sysinit
    /etc/init.d/cgroups start
    rm -rf /var/lib/containers
    mkdir -p /overlay/containers
    ln -sf /overlay/containers /var/lib/containers

    #- do fstrim on /rom/mnt if avail to release a bit pressure from the FTL
    if mount -o remount -w /rom/mnt; then
      fstrim /rom/mnt || :
      mount -o remount -r /rom/mnt || :
    fi

    #- enable rc.local
    rc-update add rc.local

    #- ensure network config
    [ -d /sys/class/net/eth0 ] || rm -f /etc/network/interfaces.d/eth0
    ifup -a || reboot

    #- start rc.local
    /etc/init.d/rc.local start

write_files:
  - path: /etc/network/interfaces
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/network/interfaces
      # generated by cloud-init
      # The config is split into serveral snippets below

      # loopback interface do not change
      auto lo
      iface lo inet loopback

      # include dynamic config
      source-directory /etc/network/interfaces.d

  - path: /etc/network/interfaces.d/wlan0
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/network/interfaces.d/wlan0
      # example config generated by cloud-init
      # remove # before auto, for automatic connection on bootup
      #auto wlan0
      iface wlan0
        use dhcp
        wifi-config-path /etc/wpa_supplicant/wlan0.conf

  - path: /etc/network/interfaces.d/eth0
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/network/interfaces.d/wlan0
      # example config generated by cloud-init
      auto eth0
      iface eth0
        use dhcp
        # sync MAC addresses of eth0 and wlan0
        pre-up exec 2> /dev/null; read hwaddr < /sys/class/net/wlan0/address && ip link set addr $hwaddr dev eth0

  - path: /etc/network/interfaces.d/ap0
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/network/interfaces.d/ap0
      # example config generated by cloud-init
      auto ap0
      iface ap0
        address 201.0.113.1/24
        dhcpd-range 201.0.113.2,201.0.113.254
        address fe80::201:0:113:1/64

        #- create interface
        pre-up    iw phy phy0 interface add $IFACE type __ap
        post-down iw dev $IFACE del

        #- call to hostapd
        pre-up    rm -f /run/.hostapd.$IFACE.log.pipe; mknod /run/.hostapd.$IFACE.log.pipe p
        up        /usr/sbin/hostapd -d -i $IFACE /etc/hostapd/$IFACE.conf > /run/.hostapd.$IFACE.log.pipe 2>&1 & echo $! > /run/hostapd.$IFACE.pid
        up        logger -t "hostapd-$IFACE[$(cat /run/hostapd.$IFACE.pid)]" < /run/.hostapd.$IFACE.log.pipe &
        post-up   rm /run/.hostapd.$IFACE.log.pipe
        pre-down  kill $(cat /run/hostapd.$IFACE.pid 2> /dev/null) 2> /dev/null; rm -f /run/hostapd.$IFACE.pid

        #- dnsmasq call
        up        /usr/sbin/dnsmasq -d -p 0 -F $IF_DHCPD_RANGE -i ap0 & echo $! > /run/dnsmasq.$IFACE.pid
        pre-down  kill $(cat /run/dnsmasq.$IFACE.pid 2> /dev/null) 2> /dev/null; rm -f /run/dnsmasq.$IFACE.pid

  - path: /etc/hostapd/ap0.conf
    permissions: '0644'
    owner: root:root
    content: |
      # hostapd config for accesspoint on ap0 interface
      # example config generated by cloud-init
      #interface=ap0

      channel=6
      hw_mode=g
      driver=nl80211
      ieee80211n=1

      ssid=alpine
      wpa_passphrase=!alP1ne!

      macaddr_acl=0
      auth_algs=1

      # WPA2
      wpa=2
      wpa_key_mgmt=WPA-PSK
      wpa_pairwise=TKIP
      rsn_pairwise=CCMP

      # WPA3
      #wpa_key_mgmt=SAE
      #rsn_pairwise=CCMP
      #ieee80211w=2

      ieee80211d=1
      country_code=DE
      #ht_capab=[HT40][SHORT-GI-20][DSSS_CCK-40]

      #wmm_enabled=1

  - path: /etc/wpa_supplicant/wlan0.conf
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/network/interfaces.d/wlan0
      # example config generated by cloud-init
      update_config=1

      country=DE

      #network={
      #  ssid="wpa2"
      #  psk="foobar"
      #  key_mgmt=WPA-PSK
      #}

  - path: /etc/chrony/chrony.conf
    permissions: '0644'
    owner: root:root
    content: |
      server ptbtime1.ptb.de
      server ptbtime2.ptb.de
      server ptbtime3.ptb.de
      server ptbtime4.ptb.de

      initstepslew 30 ptbtime1.ptb.de ptbtime2.ptb.de ptbtime3.ptb.de ptbtime4.ptb.de
      # Allow the system clock to be stepped in the first three updates
      # if its offset is larger than 1 second.
      makestep 1.0 3

      driftfile /var/lib/chrony/chrony.drift
      rtcsync
      cmdport 0

  - path: /etc/rc.local
    permissions: '0744'
    owner: root:root
    content: |
      #!/bin/sh
      set -eu

      # BPI0 M2 - mmc0 == SD Card R/W activity - mmc1 == WiFi activity
      echo mmc0 > /sys/class/leds/bananapi-m2-zero\:red\:pwr/trigger || :

  #- path: /home/pi/.ssh/authorized_keys
  #  permissions: '0644'
  #  owner: pi:pi
  #  content: |
  #    ssh-rsa something==

# vim: ts=2 sw=2 et ft=yaml
