# (C) 2025 Joerg Jungermann, GPLv2 see LICENSE

# build turing pi image to get rootfs
output/turingpi2-alpin%.img: \
  output/turingpi2-alpin%.rootfs.tar.zst \
  bpi2m0-alpine.Dockerfile.d/docker-to-sd-card-img.sh
	$(E) "GENIMAGE $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.img=))"
	$(Q) mkdir -p output
	$(Q) ./bin/img-mangler -p --image $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.img=)) sh $(SHOPT) bpi2m0-alpine.Dockerfile.d/docker-to-sd-card-img.sh $< $@

output/turingpi2-alpin%.multi.img: output/turingpi2-alpin%.rootfs.tar.zst \
  bpi2m0-alpine.Dockerfile.d/gen-multi-rootfs-sd-img.sh \
  bpi2m0-alpine.Dockerfile.d/gen-multi-rootfs-sd-img.sh.init \
  output/turingpi2-alpin%.sqfs
	$(E) "GENIMAGE $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.multi.img=))" MULTIBOOT
	$(Q) mkdir -p output
	$(Q) ./bin/img-mangler -p \
	  -e IMAGE_SIZE_KB_MIN=$$(( 384 * 1024 )) \
	  --image $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.multi.img=)) \
	  sh $(SHOPT) bpi2m0-alpine.Dockerfile.d/gen-multi-rootfs-sd-img.sh $< $@

output/turingpi2-alpin%.sqfs: \
  .deps/turingpi2-alpin%.built \
  bpi2m0-alpine.Dockerfile.d/gen-sqfs.sh
	$(E) "SQUASHFS $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.sqfs=))"
	$(Q) mkdir -p output
	$(Q) ./bin/img-mangler -p \
	  -e COMPRESSOR=xz \
	  -e BLOCKSIZE=256k \
	  --image $(NAME_PFX)$(NAME):$(patsubst output/%,%,$(@:.sqfs=)) sh $(SHOPT) bpi2m0-alpine.Dockerfile.d/gen-sqfs.sh $@

# vim: ts=4 sw=2 noet
